import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from 'react';
import { Stepper, Button, Group } from '@mantine/core';
// import { Step } from '@/components/modules/Step';
import { getServicesData } from './api/services';
import { findService, findServicesJson } from '@/lib/const/globalFunctions';
import * as Icons from 'tabler-icons-react';
import { FotoPersyaratan } from '@/components/modules/FotoPersyaratan';
import { TandaTangan } from '@/components/modules/TandanTangan';
import { BPKB } from '@/components/modules/BPKB';
import { setServices } from '@/store/services';
import { useDispatch, useSelector } from 'react-redux';
import { RootState } from '@/store/persistStore';

const inter = Inter({ subsets: ['latin'] })

export default function Home({data}:any) {

  const [active, setActive] = useState(0);
  const [highestStepVisited, setHighestStepVisited] = useState(active);
  const services = useSelector(
    (state: RootState) => state.services,
  )
  const dispatcher = useDispatch()
  const handleStepChange = (nextStep: number) => {
    const isOutOfBounds = nextStep > 3 || nextStep < 0;

    if (isOutOfBounds) {
      return;
    }

    setActive(nextStep);
    setHighestStepVisited((hSC) => Math.max(hSC, nextStep));
  };
  const shouldAllowSelectStep = (step: number) => highestStepVisited >= step && active !== step;

  useEffect(()=> {
    dispatcher(setServices({...data}))
  },[data])

  useEffect(() => {
    console.log("SERVICES", services)
  },[services])



  return (
    <>
      <Head>
        <title>Pengerjaan Services</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
      <>
      
      <Stepper active={active} onStepClick={setActive} breakpoint="sm">
      {/* {data.services.map((item:any)=> {
      return <Step key={item?.id} setActive={setActive} allowSelectStep={shouldAllowSelectStep(item?.id)} servicesData={data?.services_json?.filter((v:any) => v?.service_id?.id === item.id)} />
      })} */}
      
        <Stepper.Step
          label={findService(data, 1).service_name}
          icon={<Icons.Camera size={18} />}
          allowStepSelect={shouldAllowSelectStep(1)}      
        >
          <FotoPersyaratan data={findServicesJson(data, 1)} />
        </Stepper.Step>
        <Stepper.Step
          label={findService(data, 2).service_name}
          icon={<Icons.Signature size={18} />}
          allowStepSelect={shouldAllowSelectStep(1)}
        >
          <TandaTangan data={findServicesJson(data, 2)} />
        </Stepper.Step>
        <Stepper.Step
          label={findService(data, 3).service_name}
          icon={<Icons.Book2 size={18} />}
          allowStepSelect={shouldAllowSelectStep(2)}
        >
          <BPKB data={findServicesJson(data, 3)} />
        </Stepper.Step>

        
      </Stepper>
      <Group position="center" mt="xl">
        <Button variant="default" onClick={() => handleStepChange(active - 1)}>
          Back
        </Button>
        <Button onClick={() => handleStepChange(active + 1)}>Next step</Button>
      </Group>
     
    </>
      </main>
    </>
  )
}

export async function getStaticProps() {
  const data = await getServicesData()

  return {
      props: {
          data,
      },
  };
}
